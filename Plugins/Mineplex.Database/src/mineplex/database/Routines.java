/**
 * This class is generated by jOOQ
 */
package mineplex.database;

/**
 * Convenience access to all stored procedures and functions in Account
 */
@javax.annotation.Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.5.2"
	},
	comments = "This class is generated by jOOQ"
)
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Routines {

	/**
	 * Call <code>Account.accountGoldChange</code>
	 */
	public static java.lang.Byte callAccountgoldchange(org.jooq.Configuration configuration, java.lang.Integer accountId, java.lang.Integer goldChange) {
		mineplex.database.routines.AccountGoldChange p = new mineplex.database.routines.AccountGoldChange();
		p.setAccountId(accountId);
		p.setGoldChange(goldChange);

		p.execute(configuration);
		return p.getSuccess();
	}

	/**
	 * Call <code>Account.addThank</code>
	 */
	public static java.lang.Byte callAddthank(org.jooq.Configuration configuration, java.lang.Integer inReceiverAccountId, java.lang.Integer inSenderAccountId, java.lang.Integer inThankAmount, java.lang.String inReason, java.lang.Byte inIgnoreCooldown) {
		mineplex.database.routines.AddThank p = new mineplex.database.routines.AddThank();
		p.setInReceiverAccountId(inReceiverAccountId);
		p.setInSenderAccountId(inSenderAccountId);
		p.setInThankAmount(inThankAmount);
		p.setInReason(inReason);
		p.setInIgnoreCooldown(inIgnoreCooldown);

		p.execute(configuration);
		return p.getSuccess();
	}

	/**
	 * Call <code>Account.addTip</code>
	 */
	public static java.lang.Byte callAddtip(org.jooq.Configuration configuration, java.lang.Integer tipperAccountId, java.lang.Integer boosterAccountId, java.lang.Integer boosterId, java.lang.Integer tipAmount) {
		mineplex.database.routines.AddTip p = new mineplex.database.routines.AddTip();
		p.setTipperAccountId(tipperAccountId);
		p.setBoosterAccountId(boosterAccountId);
		p.setBoosterId(boosterId);
		p.setTipAmount(tipAmount);

		p.execute(configuration);
		return p.getSuccess();
	}

	/**
	 * Call <code>Account.checkAmplifierThank</code>
	 */
	public static java.lang.Byte callCheckamplifierthank(org.jooq.Configuration configuration, java.lang.Integer inAccountId, java.lang.Integer inAmplifierId) {
		mineplex.database.routines.CheckAmplifierThank p = new mineplex.database.routines.CheckAmplifierThank();
		p.setInAccountId(inAccountId);
		p.setInAmplifierId(inAmplifierId);

		p.execute(configuration);
		return p.getCanThank();
	}

	/**
	 * Call <code>Account.check_daily</code>
	 */
	public static mineplex.database.routines.Check_daily callCheckDaily(org.jooq.Configuration configuration, java.lang.Integer accountId_in, java.lang.Integer coinsChange, java.lang.Integer gemsChange) {
		mineplex.database.routines.Check_daily p = new mineplex.database.routines.Check_daily();
		p.setAccountId_in(accountId_in);
		p.setCoinsChange(coinsChange);
		p.setGemsChange(gemsChange);

		p.execute(configuration);
		return p;
	}
	
	/**
	 * Call <code>Account.check_clans_daily</code>
	 */
	public static mineplex.database.routines.Check_clans_daily callCheckClansDaily(org.jooq.Configuration configuration, java.lang.Integer accountId_in, java.lang.Integer serverId_in, java.lang.Integer goldChange) {
		mineplex.database.routines.Check_clans_daily p = new mineplex.database.routines.Check_clans_daily();
		p.setAccountId_in(accountId_in);
		p.setServerId_in(serverId_in);
		p.setGoldChange(goldChange);

		p.execute(configuration);
		return p;
	}

	/**
	 * Call <code>Account.check_giveaway</code>
	 */
	public static java.lang.Byte callCheckGiveaway(org.jooq.Configuration configuration, java.lang.Integer playerId, java.lang.String giveawayName, java.lang.String cooldownName) {
		mineplex.database.routines.Check_giveaway p = new mineplex.database.routines.Check_giveaway();
		p.setPlayerId(playerId);
		p.setGiveawayName(giveawayName);
		p.setCooldownName(cooldownName);

		p.execute(configuration);
		return p.getCanGive();
	}

	/**
	 * Call <code>Account.check_rank</code>
	 */
	public static mineplex.database.routines.Check_rank callCheckRank(org.jooq.Configuration configuration, java.lang.Integer accountId_in, java.lang.Integer coinsChange, java.lang.Integer gemsChange) {
		mineplex.database.routines.Check_rank p = new mineplex.database.routines.Check_rank();
		p.setAccountId_in(accountId_in);
		p.setCoinsChange(coinsChange);
		p.setGemsChange(gemsChange);

		p.execute(configuration);
		return p;
	}

	/**
	 * Call <code>Account.check_titanGiveaway</code>
	 */
	public static mineplex.database.routines.Check_titanGiveaway callCheckTitangiveaway(org.jooq.Configuration configuration, java.lang.String checkRegion) {
		mineplex.database.routines.Check_titanGiveaway p = new mineplex.database.routines.Check_titanGiveaway();
		p.setCheckRegion(checkRegion);

		p.execute(configuration);
		return p;
	}

	/**
	 * Call <code>Account.check_vote</code>
	 */
	public static mineplex.database.routines.Check_vote callCheckVote(org.jooq.Configuration configuration, java.lang.Integer accountId_in, java.lang.Integer coinsChange, java.lang.Integer gemsChange) {
		mineplex.database.routines.Check_vote p = new mineplex.database.routines.Check_vote();
		p.setAccountId_in(accountId_in);
		p.setCoinsChange(coinsChange);
		p.setGemsChange(gemsChange);

		p.execute(configuration);
		return p;
	}
	
	/**
	 * Call <code>Account.check_clans_vote</code>
	 */
	public static mineplex.database.routines.Check_clans_vote callCheckClansVote(org.jooq.Configuration configuration, java.lang.Integer accountId_in, java.lang.Integer serverId_in, java.lang.Integer goldChange) {
		mineplex.database.routines.Check_clans_vote p = new mineplex.database.routines.Check_clans_vote();
		p.setAccountId_in(accountId_in);
		p.setServerId_in(serverId_in);
		p.setGoldChange(goldChange);

		p.execute(configuration);
		return p;
	}

	/**
	 * Call <code>Account.claimThank</code>
	 */
	public static mineplex.database.routines.ClaimThank callClaimthank(org.jooq.Configuration configuration, java.lang.Integer inAccountId) {
		mineplex.database.routines.ClaimThank p = new mineplex.database.routines.ClaimThank();
		p.setInAccountId(inAccountId);

		p.execute(configuration);
		return p;
	}

	/**
	 * Call <code>Account.claimTips</code>
	 */
	public static java.lang.Integer callClaimtips(org.jooq.Configuration configuration, java.lang.Integer accountId_in) {
		mineplex.database.routines.ClaimTips p = new mineplex.database.routines.ClaimTips();
		p.setAccountId_in(accountId_in);

		p.execute(configuration);
		return p.getTipsClaimed();
	}

	/**
	 * Call <code>Account.createLeaderboard</code>
	 */
	public static void callCreateleaderboard(org.jooq.Configuration configuration, java.lang.String tableName) {
		mineplex.database.routines.CreateLeaderboard p = new mineplex.database.routines.CreateLeaderboard();
		p.setTableName(tableName);

		p.execute(configuration);
	}

	/**
	 * Call <code>Account.HeidiSQL_temproutine_1</code>
	 */
	public static void callHeidisqlTemproutine_1(org.jooq.Configuration configuration, java.lang.Integer statAccountID, java.sql.Date statDate, java.lang.Byte statGamemode, java.lang.String statServerGroup, java.lang.Byte statType, java.lang.Short statValue) {
		mineplex.database.routines.HeidiSQL_temproutine_1 p = new mineplex.database.routines.HeidiSQL_temproutine_1();
		p.setStatAccountID(statAccountID);
		p.setStatDate(statDate);
		p.setStatGamemode(statGamemode);
		p.setStatServerGroup(statServerGroup);
		p.setStatType(statType);
		p.setStatValue(statValue);

		p.execute(configuration);
	}

	/**
	 * Call <code>Account.HeidiSQL_temproutine_2</code>
	 */
	public static void callHeidisqlTemproutine_2(org.jooq.Configuration configuration, java.lang.Integer statAccountID, java.sql.Date statDate, java.lang.Byte statGamemode, java.lang.String statServerGroup, java.lang.Byte statType, java.lang.Short statValue) {
		mineplex.database.routines.HeidiSQL_temproutine_2 p = new mineplex.database.routines.HeidiSQL_temproutine_2();
		p.setStatAccountID(statAccountID);
		p.setStatDate(statDate);
		p.setStatGamemode(statGamemode);
		p.setStatServerGroup(statServerGroup);
		p.setStatType(statType);
		p.setStatValue(statValue);

		p.execute(configuration);
	}

	/**
	 * Call <code>Account.insertStatEvent</code>
	 */
	public static void callInsertstatevent(org.jooq.Configuration configuration, java.lang.Integer statAccountID, java.sql.Date statDate, java.lang.Byte statGamemode, java.lang.String statServerGroup, java.lang.Byte statType, java.lang.Short statValue) {
		mineplex.database.routines.InsertStatEvent p = new mineplex.database.routines.InsertStatEvent();
		p.setStatAccountID(statAccountID);
		p.setStatDate(statDate);
		p.setStatGamemode(statGamemode);
		p.setStatServerGroup(statServerGroup);
		p.setStatType(statType);
		p.setStatValue(statValue);

		p.execute(configuration);
	}

	/**
	 * Call <code>Account.playerLogin</code>
	 */
	public static void callPlayerlogin(org.jooq.Configuration configuration, java.lang.String paramUuid, java.lang.String paramName) {
		mineplex.database.routines.PlayerLogin p = new mineplex.database.routines.PlayerLogin();
		p.setParamUuid(paramUuid);
		p.setParamName(paramName);

		p.execute(configuration);
	}

	/**
	 * Call <code>Account.rankBonus</code>
	 */
	public static mineplex.database.routines.RankBonus callRankbonus(org.jooq.Configuration configuration, java.lang.Integer accountId_in, java.lang.Integer coinsChange, java.lang.Integer gemsChange, java.lang.Integer mythicalChestChange) {
		mineplex.database.routines.RankBonus p = new mineplex.database.routines.RankBonus();
		p.setAccountId_in(accountId_in);
		p.setCoinsChange(coinsChange);
		p.setGemsChange(gemsChange);
		p.setMythicalChestChange(mythicalChestChange);

		p.execute(configuration);
		return p;
	}

	/**
	 * Call <code>Account.swapTableNames</code>
	 */
	public static void callSwaptablenames(org.jooq.Configuration configuration, java.lang.String tableName1, java.lang.String tableName2) {
		mineplex.database.routines.SwapTableNames p = new mineplex.database.routines.SwapTableNames();
		p.setTableName1(tableName1);
		p.setTableName2(tableName2);

		p.execute(configuration);
	}

	/**
	 * Call <code>Account.test</code>
	 */
	public static void callTest(org.jooq.Configuration configuration, java.lang.String playerUuid, java.lang.String playerName) {
		mineplex.database.routines.Test p = new mineplex.database.routines.Test();
		p.setPlayerUuid(playerUuid);
		p.setPlayerName(playerName);

		p.execute(configuration);
	}

	/**
	 * Call <code>Account.testPro</code>
	 */
	public static java.sql.Date callTestpro(org.jooq.Configuration configuration) {
		mineplex.database.routines.TestPro p = new mineplex.database.routines.TestPro();

		p.execute(configuration);
		return p.getVar();
	}

	/**
	 * Call <code>Account.updateTournament</code>
	 */
	public static void callUpdatetournament(org.jooq.Configuration configuration, java.lang.String tourneyName) {
		mineplex.database.routines.UpdateTournament p = new mineplex.database.routines.UpdateTournament();
		p.setTourneyName(tourneyName);

		p.execute(configuration);
	}

	/**
	 * Call <code>Account.updateTournaments</code>
	 */
	public static void callUpdatetournaments(org.jooq.Configuration configuration) {
		mineplex.database.routines.UpdateTournaments p = new mineplex.database.routines.UpdateTournaments();

		p.execute(configuration);
	}
}
