/**
 * This class is generated by jOOQ
 */
package mineplex.database.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.5.2"
	},
	comments = "This class is generated by jOOQ"
)
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TournamentsRecord extends org.jooq.impl.UpdatableRecordImpl<mineplex.database.tables.records.TournamentsRecord> implements java.io.Serializable, java.lang.Cloneable, org.jooq.Record6<java.lang.Integer, java.lang.String, java.sql.Timestamp, java.lang.String, java.lang.Integer, java.lang.String> {

	private static final long serialVersionUID = -86512129;

	/**
	 * Setter for <code>Account.tournaments.id</code>.
	 */
	public void setId(java.lang.Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>Account.tournaments.id</code>.
	 */
	public java.lang.Integer getId() {
		return (java.lang.Integer) getValue(0);
	}

	/**
	 * Setter for <code>Account.tournaments.name</code>.
	 */
	public void setName(java.lang.String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>Account.tournaments.name</code>.
	 */
	public java.lang.String getName() {
		return (java.lang.String) getValue(1);
	}

	/**
	 * Setter for <code>Account.tournaments.startDate</code>.
	 */
	public void setStartDate(java.sql.Timestamp value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>Account.tournaments.startDate</code>.
	 */
	public java.sql.Timestamp getStartDate() {
		return (java.sql.Timestamp) getValue(2);
	}

	/**
	 * Setter for <code>Account.tournaments.gameType</code>.
	 */
	public void setGameType(java.lang.String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>Account.tournaments.gameType</code>.
	 */
	public java.lang.String getGameType() {
		return (java.lang.String) getValue(3);
	}

	/**
	 * Setter for <code>Account.tournaments.gemCost</code>.
	 */
	public void setGemCost(java.lang.Integer value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>Account.tournaments.gemCost</code>.
	 */
	public java.lang.Integer getGemCost() {
		return (java.lang.Integer) getValue(4);
	}

	/**
	 * Setter for <code>Account.tournaments.winner</code>.
	 */
	public void setWinner(java.lang.String value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>Account.tournaments.winner</code>.
	 */
	public java.lang.String getWinner() {
		return (java.lang.String) getValue(5);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record1<java.lang.Integer> key() {
		return (org.jooq.Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record6 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row6<java.lang.Integer, java.lang.String, java.sql.Timestamp, java.lang.String, java.lang.Integer, java.lang.String> fieldsRow() {
		return (org.jooq.Row6) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row6<java.lang.Integer, java.lang.String, java.sql.Timestamp, java.lang.String, java.lang.Integer, java.lang.String> valuesRow() {
		return (org.jooq.Row6) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field1() {
		return mineplex.database.tables.Tournaments.tournaments.id;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field2() {
		return mineplex.database.tables.Tournaments.tournaments.name;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.sql.Timestamp> field3() {
		return mineplex.database.tables.Tournaments.tournaments.startDate;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field4() {
		return mineplex.database.tables.Tournaments.tournaments.gameType;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field5() {
		return mineplex.database.tables.Tournaments.tournaments.gemCost;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field6() {
		return mineplex.database.tables.Tournaments.tournaments.winner;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value2() {
		return getName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.sql.Timestamp value3() {
		return getStartDate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value4() {
		return getGameType();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value5() {
		return getGemCost();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value6() {
		return getWinner();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TournamentsRecord value1(java.lang.Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TournamentsRecord value2(java.lang.String value) {
		setName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TournamentsRecord value3(java.sql.Timestamp value) {
		setStartDate(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TournamentsRecord value4(java.lang.String value) {
		setGameType(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TournamentsRecord value5(java.lang.Integer value) {
		setGemCost(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TournamentsRecord value6(java.lang.String value) {
		setWinner(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TournamentsRecord values(java.lang.Integer value1, java.lang.String value2, java.sql.Timestamp value3, java.lang.String value4, java.lang.Integer value5, java.lang.String value6) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached TournamentsRecord
	 */
	public TournamentsRecord() {
		super(mineplex.database.tables.Tournaments.tournaments);
	}

	/**
	 * Create a detached, initialised TournamentsRecord
	 */
	public TournamentsRecord(java.lang.Integer id, java.lang.String name, java.sql.Timestamp startDate, java.lang.String gameType, java.lang.Integer gemCost, java.lang.String winner) {
		super(mineplex.database.tables.Tournaments.tournaments);

		setValue(0, id);
		setValue(1, name);
		setValue(2, startDate);
		setValue(3, gameType);
		setValue(4, gemCost);
		setValue(5, winner);
	}
}
